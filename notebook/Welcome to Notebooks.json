{
	"name": "Welcome to Notebooks",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "u2ulabpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "b34decb8-6c59-4e6c-b215-18c1fbfabedf"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/855ebe37-74e1-418a-97e0-8c36e4ed7a34/resourceGroups/cbASACourseLabs/providers/Microsoft.Synapse/workspaces/cb-synpaseworkspace/bigDataPools/u2ulabpool",
				"name": "u2ulabpool",
				"type": "Spark",
				"endpoint": "https://cb-synpaseworkspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/u2ulabpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Welcome to Notebooks\r\n",
					"\r\n",
					"Notebooks provide a way to mix text, code and the result of running the code. It forms a sort of logbook of all the things you tried.\r\n",
					"\r\n",
					"It uses Markdown for the text.\r\n",
					"\r\n",
					"You can even including math: $$\\sum_{i=1}^{10} i^2$$"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"1+1"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession \r\n",
					"from pyspark.sql.types import * \r\n",
					"\r\n",
					"# Azure storage access info \r\n",
					"blob_account_name = 'cbu2ubabssourcedata' # replace with your blob name \r\n",
					"blob_container_name = 'u2ulabs' # replace with your container name \r\n",
					"blob_relative_path = 'data/babs/' # replace with your relative folder path \r\n",
					"linked_service_name = 'ls_BABSData' # replace with your linked service name \r\n",
					"\r\n",
					"blob_sas_token = mssparkutils.credentials.getConnectionStringOrCreds(linked_service_name) \r\n",
					"\r\n",
					"# Allow SPARK to access from Blob remotely \r\n",
					"wasbs_path = 'wasbs://%s@%s.blob.core.windows.net/%s' % (blob_container_name, blob_account_name, blob_relative_path) \r\n",
					"spark.conf.set('fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name), blob_sas_token) \r\n",
					"print('Remote blob path: ' + wasbs_path) \r\n",
					"\r\n",
					"# Read a csv file \r\n",
					"csv_path = wasbs_path + '201508_trip_data.csv' \r\n",
					"df_csv = spark.read.csv(csv_path, header = 'true') \r\n",
					"\r\n",
					"# Read a parquet file \r\n",
					"#parquet_path = wasbs_path + '201508_trip_data.csv' \r\n",
					"#df_parquet = spark.read.parquet(parquet_path) \r\n",
					"\r\n",
					"# Read a json file \r\n",
					"#json_path = wasbs_path + '201508_trip_data.csv' \r\n",
					"#df_json = spark.read.json(json_path) "
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df_csv.count()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"display(df_csv.head(200))"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql \r\n",
					"SELECT * FROM df_csv"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql \r\n",
					"show databases"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"CREATE DATABASE u2ulab;\r\n",
					"SHOW DATABASES;"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.catalog.setCurrentDatabase('u2ulab')\r\n",
					"df_csv.createOrReplaceTempView('tripdata')"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"USE u2ulab;\r\n",
					"SELECT * from tripdata LIMIT 200"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					}
				},
				"source": [
					"%%sql\r\n",
					"SELECT "
				],
				"execution_count": null
			}
		]
	}
}